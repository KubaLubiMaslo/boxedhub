local TabWindowModule = {}

function TabWindowModule:CreateWindow(parent, tabs)
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "TabWindowGui"
    screenGui.ResetOnSpawn = false  -- Optional: prevents the GUI from disappearing when respawning
    screenGui.Parent = parent  -- Add the ScreenGui to PlayerGui

    local window = Instance.new("Frame")
    window.Size = UDim2.new(0, 400, 0, 300)
    window.Position = UDim2.new(0.5, -200, 0.5, -150)
    window.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    window.Parent = screenGui  -- Now parented to the ScreenGui
    
    local tabList = Instance.new("Frame")
    tabList.Size = UDim2.new(0, 100, 1, 0)
    tabList.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    tabList.Parent = window
    
    local tabContainer = Instance.new("ScrollingFrame")
    tabContainer.Size = UDim2.new(1, 0, 1, 0)
    tabContainer.CanvasSize = UDim2.new(0, 0, 1, 0)
    tabContainer.Parent = tabList
    
    local contentFrame = Instance.new("Frame")
    contentFrame.Size = UDim2.new(1, -100, 1, 0)
    contentFrame.Position = UDim2.new(0, 100, 0, 0)
    contentFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    contentFrame.Parent = window
    
    local tabButtons = {}
    local tabContents = {}

    for i, tabData in pairs(tabs) do
        local tabButton = Instance.new("TextButton")
        tabButton.Size = UDim2.new(1, 0, 0, 50)
        tabButton.Position = UDim2.new(0, 0, 0, (i - 1) * 50)
        tabButton.Text = tabData.name
        tabButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
        tabButton.Parent = tabContainer
        table.insert(tabButtons, tabButton)
        
        local content = Instance.new("Frame")
        content.Size = UDim2.new(1, 0, 1, 0)
        content.Position = UDim2.new(0, 0, 0, 0)
        content.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        content.Visible = false
        content.Parent = contentFrame
        table.insert(tabContents, content)

        for j, toggleData in pairs(tabData.toggles) do
            local toggleButton = Instance.new("TextButton")
            toggleButton.Size = UDim2.new(0, 200, 0, 50)
            toggleButton.Position = UDim2.new(0, 10, 0, (j - 1) * 60)
            toggleButton.Text = toggleData.name .. " (OFF)"
            toggleButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
            toggleButton.Parent = content
            
            local isOn = false
            toggleButton.MouseButton1Click:Connect(function()
                isOn = not isOn
                toggleButton.Text = toggleData.name .. (isOn and " (ON)" or " (OFF)")
                toggleData.callback(isOn)
            end)
        end
        
        tabButton.MouseButton1Click:Connect(function()
            -- Hide all other tabs and show the selected one
            for _, otherContent in pairs(tabContents) do
                otherContent.Visible = false
            end
            content.Visible = true
        end)
        
        if i == 1 then
            content.Visible = true
        end
    end
    
    return window
end

function TabWindowModule:DestroyWindow(parent)
    for _, i in pairs(parent:GetChildren()) do
        if i.Name == "TabWindowGui" then
            i:Destroy()
        end
    end
end

return TabWindowModule
